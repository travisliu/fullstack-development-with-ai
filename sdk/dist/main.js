(()=>{var e={448:e=>{e.exports=class{evaluate(e,t,s){if(!e.enabled)return!1;if(!e.segments||0===e.segments.length)return!0;for(let a of e.segments){const e=s.get(a);if(this.evaluateSegment(e,t))return!0}return!1}evaluateSegment(e,t){for(let s of e.criteria){const e=t[s.attribute];if(!this.meetsCriteria(e,s))return!1}return!0}meetsCriteria(e,t){switch(t.operator){case"EQUALS":return e===t.value;case"NOT_EQUALS":return e!==t.value;case"GREATER_THAN":return e>t.value;case"LESS_THAN":return e<t.value;default:throw new Error(`Unsupported operator ${t.operator}`)}}}},44:(e,t,s)=>{const a=s(688),r=s(989),n=s(627),o=s(448);e.exports=class{constructor({serverUrl:e}){this.serverUrl=e,this.webSocketClient=new a(e),this.localStorageManager=new r,this.dataSynchronizer=new n(this.localStorageManager),this.featureEvaluator=new o,this.init()}init(){this.webSocketClient.onMessage((e=>{this.dataSynchronizer.synchronize(e)})),this.webSocketClient.connect()}isFeatureEnabled(e,t){const s=this.localStorageManager.getFeatureFlag(e),a=this.localStorageManager.getSegmentsMap();return s?this.featureEvaluator.evaluate(s,t,a):(console.warn(`Feature flag ${e} not found.`),!1)}}},989:e=>{e.exports=class{constructor(){this.featureFlags=new Map,this.segments=new Map}setAllFeatureFlags(e){this.featureFlags.clear(),e.forEach((e=>{this.featureFlags.set(e.id,e)}))}setAllSegments(e){this.segments.clear(),e.forEach((e=>{this.segments.set(e.id,e)}))}upsertFeatureFlag(e){this.featureFlags.set(e.id,e)}upsertSegment(e){this.segments.set(e.id,e)}deleteFeatureFlag(e){this.featureFlags.delete(e)}deleteSegment(e){this.segments.delete(e)}getFeatureFlag(e){for(let t of this.featureFlags.values())if(t.name===e)return t;return null}getSegmentsMap(){return new Map(this.segments)}}},627:e=>{e.exports=class{constructor(e){this.localStorageManager=e}synchronize(e){const{type:t,modelName:s,data:a}=e;switch(t){case"INITIAL":this.handleInitialMessage(a);break;case"SET":this.handleSetMessage(s,a);break;case"DELETE":this.handleDeleteMessage(s,a);break;default:console.error(`Unsupported message type: ${t}`)}}handleInitialMessage(e){const{featureFlags:t,segments:s}=e;this.localStorageManager.setAllFeatureFlags(t),this.localStorageManager.setAllSegments(s)}handleSetMessage(e,t){"FeatureFlag"===e?this.localStorageManager.upsertFeatureFlag(t):"Segment"===e?this.localStorageManager.upsertSegment(t):console.error(`Unsupported model name: ${e}`)}handleDeleteMessage(e,t){"FeatureFlag"===e?this.localStorageManager.deleteFeatureFlag(t.id):"Segment"===e?this.localStorageManager.deleteSegment(t.id):console.error(`Unsupported model name: ${e}`)}}},688:e=>{e.exports=class{constructor(e){this.url=e,this.socket=null,this.messageListeners=[]}connect(){this.socket=new WebSocket(this.url),this.socket.onopen=()=>{console.log("WebSocket connection established")},this.socket.onerror=e=>{console.error("WebSocket error:",e)},this.socket.onmessage=e=>{this.handleMessage(e.data)},this.socket.onclose=e=>{console.log("WebSocket connection closed",e.reason)}}sendMessage(e){this.socket.readyState===WebSocket.OPEN?this.socket.send(JSON.stringify(e)):console.error("WebSocket is not open. Message not sent.")}onMessage(e){this.messageListeners.push(e)}handleMessage(e){const t=JSON.parse(e);this.messageListeners.forEach((e=>e(t)))}close(){this.socket&&this.socket.close()}}}},t={};!function s(a){var r=t[a];if(void 0!==r)return r.exports;var n=t[a]={exports:{}};return e[a](n,n.exports,s),n.exports}(44)})();